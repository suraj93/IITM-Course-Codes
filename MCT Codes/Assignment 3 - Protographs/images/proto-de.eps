%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Microsoft Windows 8.
%%Title: E:\College\7th Sem\MCT Codes\Assignment 4 - Protographs\proto-de.eps
%%CreationDate: 11/13/2014  14:55:14
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    87   262   507   578
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    87   262   507   578
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1044 6936 csm

    0     0  5045  3782 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5046 3783 rf
6 w
0 3082 3910 0 0 -3082 656 3366 4 MP
PP
-3910 0 0 3082 3910 0 0 -3082 656 3366 5 MP stroke
4 w
DO
SO
6 w
0 sg
 656 3366 mt 4566 3366 L
 656 3366 mt  656  284 L
 656 3366 mt  656 3326 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 623 3511 mt 
(0) s
1438 3366 mt 1438 3326 L
1372 3511 mt 
(50) s
2220 3366 mt 2220 3326 L
2120 3511 mt 
(100) s
3002 3366 mt 3002 3326 L
2902 3511 mt 
(150) s
3784 3366 mt 3784 3326 L
3684 3511 mt 
(200) s
4566 3366 mt 4566 3326 L
4466 3511 mt 
(250) s
 656 3366 mt  695 3366 L
 555 3410 mt 
(0) s
 656 3057 mt  695 3057 L
 388 3101 mt 
(0.05) s
 656 2749 mt  695 2749 L
 455 2793 mt 
(0.1) s
 656 2441 mt  695 2441 L
 388 2485 mt 
(0.15) s
 656 2133 mt  695 2133 L
 455 2177 mt 
(0.2) s
 656 1825 mt  695 1825 L
 388 1869 mt 
(0.25) s
 656 1516 mt  695 1516 L
 455 1560 mt 
(0.3) s
 656 1208 mt  695 1208 L
 388 1252 mt 
(0.35) s
 656  900 mt  695  900 L
 455  944 mt 
(0.4) s
 656  592 mt  695  592 L
 388  636 mt 
(0.45) s
 656  284 mt  695  284 L
 455  328 mt 
(0.5) s
gs 656 284 3911 3083 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
16 1 15 0 16 21 16 209 15 359 16 315 15 228 16 162 
16 115 15 86 16 65 16 50 15 41 16 33 16 27 15 23 
16 19 16 17 15 14 16 13 15 11 16 10 16 9 15 8 
16 8 16 6 15 7 16 5 16 5 15 5 16 4 15 5 
16 3 16 4 15 3 16 3 16 3 15 3 16 3 16 2 
15 3 16 2 16 2 15 2 16 2 15 2 16 2 16 2 
15 1 16 2 16 1 15 2 16 1 16 2 15 1 16 1 
15 2 16 1 16 1 15 1 16 1 16 1 15 1 16 2 
16 1 15 1 16 0 16 1 15 1 16 1 15 1 16 1 
16 1 15 1 16 0 16 1 15 1 16 1 16 1 15 0 
16 1 15 1 16 1 16 0 15 1 16 1 16 0 15 1 
16 1 16 0 15 1 16 1 16 0 15 1 16 1 15 0 
16 1 16 0 15 1 16 1 16 0 15 1 16 1 16 0 
15 1 16 0 15 1 16 1 16 0 15 1 16 0 16 1 
15 1 16 0 16 1 15 0 16 1 16 1 15 0 16 1 
15 1 16 0 16 1 15 0 16 1 16 1 15 0 16 1 
16 1 15 0 16 1 15 1 16 0 16 1 15 1 16 1 
16 0 15 1 16 1 16 1 15 0 16 1 16 1 15 1 
16 1 15 0 16 1 16 1 15 1 16 1 16 1 15 1 
16 1 16 1 15 1 16 1 15 1 16 1 16 1 15 2 
16 1 16 1 15 1 16 2 16 1 15 2 16 1 16 2 
15 1 16 2 15 2 16 2 16 2 15 2 16 2 16 2 
15 3 16 2 16 3 15 3 16 3 15 3 16 4 16 3 
15 5 16 4 16 5 15 5 16 5 16 7 15 6 16 8 
16 9 15 9 16 11 15 13 16 14 16 18 15 21 16 25 
16 32 15 42 16 57 16 84 15 134 16 253 671 534 207 MP stroke
16 1 15 3 16 197 16 515 15 432 16 275 15 172 16 113 
16 78 15 56 16 42 16 33 15 26 16 21 16 17 15 14 
16 13 16 10 15 9 16 8 15 7 16 7 16 5 15 5 
16 5 16 4 15 4 16 4 16 3 15 3 16 3 15 2 
16 3 16 2 15 2 16 2 16 2 15 2 16 1 16 2 
15 1 16 2 16 1 15 1 16 2 15 1 16 1 16 1 
15 1 16 1 16 1 15 1 16 1 16 1 15 1 16 0 
15 1 16 1 16 1 15 0 16 1 16 1 15 0 16 1 
16 1 15 0 16 1 16 1 15 0 16 1 15 0 16 1 
16 0 15 1 16 0 16 1 15 0 16 1 16 0 15 1 
16 0 15 1 16 0 16 1 15 0 16 1 16 0 15 0 
16 1 16 0 15 1 16 0 16 0 15 1 16 0 15 1 
16 0 16 0 15 1 16 0 16 1 15 0 16 0 16 1 
15 0 16 1 15 0 16 0 16 1 15 0 16 0 16 1 
15 0 16 1 16 0 15 0 16 1 16 0 15 1 16 0 
15 0 16 1 16 0 15 1 16 0 16 0 15 1 16 0 
16 1 15 0 16 0 15 1 16 0 16 1 15 0 16 1 
16 0 15 1 16 0 16 1 15 0 16 1 16 0 15 1 
16 0 15 1 16 0 16 1 15 0 16 1 16 0 15 1 
16 1 16 0 15 1 16 1 15 0 16 1 16 1 15 1 
16 0 16 1 15 1 16 1 16 1 15 1 16 1 16 1 
15 1 16 1 15 1 16 1 16 1 15 2 16 1 16 1 
15 2 16 2 16 1 15 2 16 2 15 2 16 2 16 3 
15 2 16 3 16 3 15 3 16 4 16 4 15 4 16 5 
16 5 15 7 16 7 15 8 16 9 16 11 15 14 16 16 
16 21 15 28 16 39 16 58 15 104 16 273 671 534 207 MP stroke
16 0 15 65 16 567 16 670 15 403 16 222 15 130 16 82 
16 55 15 39 16 29 16 23 15 17 16 14 16 12 15 9 
16 9 16 7 15 6 16 5 15 5 16 4 16 3 15 4 
16 3 16 3 15 2 16 2 16 2 15 2 16 2 15 2 
16 1 16 2 15 1 16 2 16 1 15 1 16 1 16 1 
15 1 16 1 16 1 15 1 16 0 15 1 16 1 16 1 
15 0 16 1 16 1 15 0 16 1 16 0 15 1 16 0 
15 1 16 0 16 1 15 0 16 1 16 0 15 1 16 0 
16 1 15 0 16 0 16 1 15 0 16 0 15 1 16 0 
16 1 15 0 16 0 16 1 15 0 16 0 16 0 15 1 
16 0 15 0 16 1 16 0 15 0 16 1 16 0 15 0 
16 0 16 1 15 0 16 0 16 0 15 1 16 0 15 0 
16 0 16 1 15 0 16 0 16 0 15 1 16 0 16 0 
15 0 16 1 15 0 16 0 16 0 15 1 16 0 16 0 
15 0 16 1 16 0 15 0 16 0 16 1 15 0 16 0 
15 0 16 1 16 0 15 0 16 0 16 1 15 0 16 0 
16 0 15 1 16 0 15 0 16 1 16 0 15 0 16 0 
16 1 15 0 16 0 16 1 15 0 16 0 16 1 15 0 
16 0 15 1 16 0 16 0 15 1 16 0 16 0 15 1 
16 0 16 1 15 0 16 1 15 0 16 0 16 1 15 0 
16 1 16 0 15 1 16 0 16 1 15 1 16 0 16 1 
15 1 16 0 15 1 16 1 16 1 15 0 16 1 16 1 
15 1 16 1 16 1 15 1 16 2 15 1 16 1 16 2 
15 1 16 2 16 2 15 2 16 2 16 3 15 3 16 3 
16 3 15 4 16 4 15 6 16 5 16 7 15 9 16 10 
16 13 15 17 16 24 16 35 15 63 16 140 671 534 207 MP stroke
16 1 15 0 16 16 16 185 15 348 16 318 15 236 16 168 
16 122 15 90 16 68 16 54 15 42 16 35 16 29 15 24 
16 20 16 18 15 16 16 13 15 12 16 10 16 10 15 8 
16 8 16 7 15 7 16 6 16 5 15 5 16 5 15 4 
16 4 16 4 15 3 16 4 16 3 15 3 16 3 16 2 
15 3 16 2 16 3 15 2 16 2 15 2 16 2 16 2 
15 1 16 2 16 2 15 1 16 2 16 1 15 2 16 1 
15 1 16 2 16 1 15 1 16 1 16 1 15 1 16 2 
16 1 15 1 16 1 16 1 15 1 16 1 15 0 16 1 
16 1 15 1 16 1 16 1 15 1 16 0 16 1 15 1 
16 1 15 1 16 0 16 1 15 1 16 1 16 0 15 1 
16 1 16 0 15 1 16 1 16 1 15 0 16 1 15 1 
16 0 16 1 15 1 16 0 16 1 15 0 16 1 16 1 
15 0 16 1 15 1 16 0 16 1 15 1 16 0 16 1 
15 1 16 0 16 1 15 0 16 1 16 1 15 0 16 1 
15 1 16 0 16 1 15 1 16 0 16 1 15 1 16 1 
16 0 15 1 16 1 15 0 16 1 16 1 15 1 16 0 
16 1 15 1 16 1 16 0 15 1 16 1 16 1 15 1 
16 1 15 1 16 1 16 0 15 1 16 1 16 1 15 1 
16 1 16 2 15 1 16 1 15 1 16 1 16 1 15 2 
16 1 16 1 15 2 16 1 16 2 15 1 16 2 16 1 
15 2 16 2 15 2 16 2 16 2 15 2 16 2 16 3 
15 2 16 3 16 3 15 3 16 3 15 4 16 3 16 4 
15 4 16 5 16 5 15 5 16 6 16 7 15 7 16 8 
16 9 15 10 16 12 15 13 16 15 16 18 15 22 16 27 
16 33 15 44 16 59 16 85 15 131 16 222 671 534 207 MP stroke
16 1 15 2 16 142 16 465 15 447 16 300 15 192 16 126 
16 88 15 63 16 47 16 36 15 29 16 24 16 19 15 16 
16 13 16 12 15 10 16 9 15 8 16 7 16 6 15 6 
16 5 16 5 15 4 16 4 16 3 15 4 16 3 15 2 
16 3 16 3 15 2 16 2 16 2 15 2 16 2 16 2 
15 1 16 2 16 1 15 2 16 1 15 1 16 2 16 1 
15 1 16 1 16 1 15 1 16 1 16 1 15 1 16 1 
15 1 16 1 16 0 15 1 16 1 16 1 15 0 16 1 
16 1 15 1 16 0 16 1 15 0 16 1 15 1 16 0 
16 1 15 0 16 1 16 1 15 0 16 1 16 0 15 1 
16 0 15 1 16 0 16 1 15 0 16 1 16 0 15 1 
16 0 16 0 15 1 16 0 16 1 15 0 16 1 15 0 
16 1 16 0 15 0 16 1 16 0 15 1 16 0 16 1 
15 0 16 0 15 1 16 0 16 1 15 0 16 0 16 1 
15 0 16 1 16 0 15 1 16 0 16 0 15 1 16 0 
15 1 16 0 16 1 15 0 16 0 16 1 15 0 16 1 
16 0 15 1 16 0 15 1 16 0 16 1 15 0 16 1 
16 0 15 1 16 0 16 1 15 0 16 1 16 0 15 1 
16 0 15 1 16 1 16 0 15 1 16 0 16 1 15 1 
16 0 16 1 15 1 16 1 15 0 16 1 16 1 15 1 
16 1 16 0 15 1 16 1 16 1 15 1 16 1 16 1 
15 2 16 1 15 1 16 1 16 2 15 1 16 1 16 2 
15 2 16 1 16 2 15 2 16 2 15 3 16 2 16 3 
15 2 16 3 16 4 15 3 16 4 16 4 15 5 16 5 
16 6 15 7 16 7 15 9 16 10 16 12 15 14 16 18 
16 22 15 29 16 40 16 59 15 100 16 243 671 534 207 MP stroke
16 0 15 22 16 375 16 668 15 480 16 279 15 165 16 104 
16 69 15 49 16 36 16 28 15 21 16 18 16 14 15 11 
16 10 16 9 15 7 16 7 15 5 16 5 16 5 15 4 
16 3 16 3 15 3 16 3 16 3 15 2 16 2 15 2 
16 2 16 2 15 1 16 2 16 1 15 2 16 1 16 1 
15 1 16 1 16 2 15 1 16 0 15 1 16 1 16 1 
15 1 16 1 16 0 15 1 16 1 16 0 15 1 16 1 
15 0 16 1 16 0 15 1 16 1 16 0 15 1 16 0 
16 1 15 0 16 0 16 1 15 0 16 1 15 0 16 1 
16 0 15 0 16 1 16 0 15 1 16 0 16 0 15 1 
16 0 15 0 16 1 16 0 15 0 16 1 16 0 15 0 
16 1 16 0 15 0 16 1 16 0 15 0 16 0 15 1 
16 0 16 0 15 1 16 0 16 0 15 1 16 0 16 0 
15 0 16 1 15 0 16 0 16 1 15 0 16 0 16 0 
15 1 16 0 16 0 15 1 16 0 16 0 15 0 16 1 
15 0 16 0 16 1 15 0 16 0 16 1 15 0 16 0 
16 0 15 1 16 0 15 0 16 1 16 0 15 0 16 1 
16 0 15 0 16 1 16 0 15 1 16 0 16 0 15 1 
16 0 15 0 16 1 16 0 15 1 16 0 16 1 15 0 
16 0 16 1 15 0 16 1 15 0 16 1 16 0 15 1 
16 1 16 0 15 1 16 0 16 1 15 1 16 1 16 0 
15 1 16 1 15 1 16 1 16 0 15 1 16 1 16 1 
15 2 16 1 16 1 15 1 16 2 15 1 16 2 16 2 
15 1 16 2 16 3 15 2 16 3 16 2 15 3 16 4 
16 4 15 4 16 5 15 6 16 6 16 8 15 9 16 12 
16 14 15 18 16 24 16 36 15 57 16 108 671 534 207 MP stroke
gr

c8
0 sg
2164 3654 mt 
(Iteration Number) s
 306 2413 mt  -90 rotate
(Edge Error Probability) s
90 rotate

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
